cat tt.py
#!/usr/local/bin/env python
def changer(a,b):
        if b is l:
                print 'b is l !!!'      #说明在调用函数的时候，传递的参数赋值给函数本地变量b, 传进来的变量名跟函数的形式参数是对传进来的对象的相同引用
        a = 2
        b[0]= 'spam'
x=1
l=[1,2]
changer(x,l)
print x,l

运行结果：
[root@skx-p4 ~]# python tt.py 
b is l !!!
1 ['spam', 2]


###########3函数关键字参数，可以变参数示例：#########
def f(a,*pargs, **kwargs):
    print a, pargs, kwargs
    for i in pargs:
        print'pargs have values are %s' % i
    for k,v in kwargs.items():
        print"kwargs dict's key and values are {}, {}".format(k,v)
        #print k,v
f(1,2,3,b=1,c=2)
f(3,4,5,65,6,6,d=1,b=2,c=3)

输出：
1 (2, 3) {'c': 2, 'b': 1}
pargs have values are 2
pargs have values are 3
kwargs dict's key and values are c, 2
kwargs dict's key and values are b, 1
3 (4, 5, 65, 6, 6) {'c': 3, 'b': 2, 'd': 1}
pargs have values are 4
pargs have values are 5
pargs have values are 65
pargs have values are 6
pargs have values are 6
kwargs dict's key and values are c, 3
kwargs dict's key and values are b, 2
kwargs dict's key and values are d, 1

#从输出的log可以看出，*pargs, **kwargs 分别是元组跟字典，而且可以对他们进行元组跟字典的相关方法操作


###################可以用元组或者字典在调用函数的时候给函数传递参数##########
def diaoyong_jiebao(a, b, c, d):
    print a, b, c, d
args= (1, 2)
args += (3,4)

diaoyong_jiebao(*args)

dictionary = {'a':1, 'b':2, 'c':3}
dictionary['d'] = 4

diaoyong_jiebao(**dictionary)

输出：
1 2 3 4
1 2 3 4

